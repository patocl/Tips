param(
    [string]$action,           # 'install' or 'uninstall'
    [string]$installerName     # Name of the installer
)

# Get the current script directory
$scriptPath = Split-Path -Parent $MyInvocation.MyCommand.Definition

# Full path to the installer CSV file
$csvFilePath = Join-Path -Path $scriptPath -ChildPath "installer.csv"

# Function to read installer information from CSV
function GetInstallerInfo {
    param (
        [string]$installerName,
        [string]$csvPath
    )

    $installerInfo = Import-Csv $csvPath | Where-Object { $_.InstallerName -eq $installerName }
    return $installerInfo
}

# Function to install the software
function InstallSoftware {
    param (
        [string]$installerExecutable
    )

    Start-Process -FilePath $installerExecutable -Verb RunAs
}

# Function to uninstall the software
function UninstallSoftware {
    param (
        [string]$installerExecutable
    )

    Start-Process -FilePath $installerExecutable -ArgumentList "/uninstall" -Verb RunAs
}

# Check if the CSV file exists
if (Test-Path $csvFilePath) {
    $installerInfo = GetInstallerInfo -installerName $installerName -csvPath $csvFilePath

    if ($installerInfo) {
        $installerExecutable = $installerInfo.InstallerExecutable

        if ($action -eq "install") {
            InstallSoftware -installerExecutable $installerExecutable
        } elseif ($action -eq "uninstall") {
            UninstallSoftware -installerExecutable $installerExecutable
        } else {
            Write-Host "Invalid action specified. Use -help for usage information."
        }
    } else {
        Write-Host "Installer information not found for '$installerName'."
    }
} else {
    Write-Host "Installer CSV file not found."
}


InstallerName,InstallerExecutable,Version
YourProgram1,"C:\Path\To\Installer1.exe",1.0.0
YourProgram2,"C:\Path\To\Installer2.exe",2.0.0